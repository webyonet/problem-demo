{
  "parserOptions": {
    "ecmaVersion": 13,
    "sourceType": "module",
    "ecmaFeatures": {
      "arrowFunctions": true,
      "binaryLiterals": true,
      "blockBindings": true,
      "classes": true,
      "defaultParams": true,
      "destructuring": true,
      "forOf": true,
      "generators": true,
      "modules": true,
      "objectLiteralComputedProperties": true,
      "objectLiteralDuplicateProperties": true,
      "objectLiteralShorthandMethods": true,
      "objectLiteralShorthandProperties": true,
      "octalLiterals": true,
      "regexUFlag": true,
      "regexYFlag": true,
      "spread": true,
      "superInFunctions": true,
      "templateStrings": true,
      "unicodeCodePointEscapes": true,
      "globalReturn": true,
      "jsx": true
    }
  },
  "rules": {
    "no-unused-expressions": [
      2,
      {
        "allowTernary": true
      }
    ],
    "no-useless-escape": 1,
    "no-extra-parens": 0,
    "no-undef": 2,
    "curly": 2,
    "eqeqeq": [
      2,
      "always"
    ],
    "no-console": 1,
    "no-unused-vars": 2,
    "no-invalid-this": 2,
    "no-prototype-builtins": 0,
    "arrow-parens": [
      2,
      "as-needed",
      {
        "requireForBlockBody": false
      }
    ],
    "no-case-declarations": 1,
    "quotes": [
      2,
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "react/jsx-no-target-blank": 1,
    "react/display-name": 0,
    "react/jsx-quotes": [
      0,
      "single"
    ],
    "react/jsx-no-undef": [
      2,
      {
        "allowGlobals": true
      }
    ],
    "react/jsx-sort-props": [
      2,
      {
        "callbacksLast": true,
        "noSortAlphabetically": true,
        "shorthandFirst": false,
        "shorthandLast": false,
        "reservedFirst": [
          "key",
          "ref"
        ]
      }
    ],
    "react/jsx-uses-react": 2,
    "react/jsx-uses-vars": 2,
    "react/no-string-refs": 2,
    "react/no-did-mount-set-state": 2,
    "react/no-did-update-set-state": 2,
    "react/no-multi-comp": 2,
    "react/no-unknown-property": 2,
    "react/prop-types": 2,
    "react/react-in-jsx-scope": 2,
    "react/self-closing-comp": 2,
    "react/wrap-multilines": [
      0,
      {
        "declaration": true,
        "assignment": true,
        "return": true,
        "arrow": true
      }
    ],
    "react/jsx-no-duplicate-props": 2,
    "react/style-prop-object": 2,
    "jsx-control-statements/jsx-choose-not-empty": 2,
    "jsx-control-statements/jsx-for-require-each": 2,
    "jsx-control-statements/jsx-for-require-of": 2,
    "jsx-control-statements/jsx-for-require-body": 0,
    "jsx-control-statements/jsx-if-require-condition": 2,
    "jsx-control-statements/jsx-otherwise-once-last": 2,
    "jsx-control-statements/jsx-use-if-tag": 2,
    "jsx-control-statements/jsx-when-require-condition": 2,
    "jsx-control-statements/jsx-jcs-no-undef": 2,
    "flowtype/space-after-type-colon": [
      2,
      "always",
      {
        "allowLineBreak": false
      }
    ],
    "flowtype/use-flow-type": 2,
    "flowtype/valid-syntax": 2,
    "flowtype/define-flow-type": 1,
    "flowtype/type-id-match": [
      2,
      "^([A-Z][a-z0-9]*)"
    ],
    "flowtype/require-return-type": [
      2,
      "always",
      {
        "annotateUndefined": "always",
        "excludeArrowFunctions": "expressionsOnly"
      }
    ],
    "flowtype/require-parameter-type": [
      2,
      {
        "excludeArrowFunctions": "expressionsOnly"
      }
    ],
    "flowtype/no-dupe-keys": 2,
    "flowtype/no-types-missing-file-annotation": 0,
    "flowtype/require-variable-type": [
      2,
      {
        "excludeVariableTypes": {
          "var": true,
          "let": true,
          "const": true
        }
      }
    ]
  },
  "env": {
    "node": true,
    "jest": true,
    "browser": true,
    "commonjs": true,
    "es6": true,
    "jsx-control-statements/jsx-control-statements": true
  },
  "parser": "@babel/eslint-parser",
  "plugins": [
    "react",
    "react-hooks",
    "jsx-control-statements",
    "flowtype"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:jsx-control-statements/recommended",
    "plugin:flowtype/recommended"
  ],
  "settings": {
    "flowtype": {
      "onlyFilesWithFlowAnnotation": false
    }
  }
}
